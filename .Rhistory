Y = matrix(nrow = N, ncol = steps)
vol = matrix(nrow = N, ncol = steps) #matrix if we want to save values along the way
startvol = rgamma(N, 2*kappa*theta*xi^(-2), 2*kappa*xi^(-2))
X[, 1] = spot
vol[, 1] = startvol
Y[, 1] = X[,1] + rnorm(N, 0, gamma*vol[,1]/sqrt(steps)) #n corresponds to steps and not repetitions N?
#            -- finkont2 lognormal scheme --
#    (slightly different model setup /lognormal scheme)
#                       (eller)
# http://www.homepages.ucl.ac.uk/~ucahgon/Heston.pdf slide 9
i = 2
NS = rnorm(N, 0, 1)
NV = rho*NS + sqrt(1-rho^2)*rnorm(N,0,1)
X[,i] =   exp(  log(X[,i-1]) - 1/2*vol[,i-1]*dt + sqrt(vol[,i-1])*dt*NS   )
vol[,i] = exp(  log(vol[,i-1])+1/vol[,i-1]*(kappa*(theta-vol[,i-1])-1/2*xi^2)   )*dt + xi*1/sqrt(vol[,i-1])*sqrt(dt)*NV
#Observed Y
omega = gamma*vol[,i]/sqrt(steps)     #n corresponds to steps and not repetitions N? #should vol be i-1? No?
Y[,i] = X[,i] + rnorm(N, 0, omega)
vol
vol[1,]
omega = gamma*vol[,i]/sqrt(steps)     #n corresponds to steps and not repetitions N? #should vol be i-1? No?
omega
Y[,i] = X[,i] + rnorm(N, 0, omega)
source('C:/Users/Frederik/Desktop/Lspeciale/Simulation.R')
warnings()
kappa = 5
theta = 0.0225
xi = 0.4        ##vol of vol
rho = -0.5
spot = 1
N = 1000
mat = 100
steps = 1000
dt = mat/steps
#noise
gamma = 0.5
X = matrix(nrow = N, ncol = steps)
Y = matrix(nrow = N, ncol = steps)
vol = matrix(nrow = N, ncol = steps) #matrix if we want to save values along the way
startvol = rgamma(N, 2*kappa*theta*xi^(-2), 2*kappa*xi^(-2))
X[, 1] = spot
vol[, 1] = startvol
Y[, 1] = X[,1] + gamma*vol[,1]/sqrt(steps)*rnorm(N, 0, 1) #n corresponds to steps and not repetitions N?
i=2
NS = rnorm(N, 0, 1)
NV = rho*NS + sqrt(1-rho^2)*rnorm(N,0,1)
X[,i] =   exp(  log(X[,i-1]) - 1/2*vol[,i-1]*dt + sqrt(vol[,i-1])*dt*NS   )
vol[,i] = exp(  log(vol[,i-1])+1/vol[,i-1]*(kappa*(theta-vol[,i-1])-1/2*xi^2)   )*dt + xi*1/sqrt(vol[,i-1])*sqrt(dt)*NV
omega = gamma*vol[,i]/sqrt(steps)     #n corresponds to steps and not repetitions N? #should vol be i-1? No?
Y[,i] = X[,i] + omega * rnorm(N, 0, 1)
y
Y
i = 3
NS = rnorm(N, 0, 1)
NV = rho*NS + sqrt(1-rho^2)*rnorm(N,0,1)
X[,i] =   exp(  log(X[,i-1]) - 1/2*vol[,i-1]*dt + sqrt(vol[,i-1])*dt*NS   )
vol[,i] = exp(  log(vol[,i-1])+1/vol[,i-1]*(kappa*(theta-vol[,i-1])-1/2*xi^2)   )*dt + xi*1/sqrt(vol[,i-1])*sqrt(dt)*NV
#Observed Y
omega = gamma*vol[,i]/sqrt(steps)     #n corresponds to steps and not repetitions N? #should vol be i-1? No?
Y[,i] = X[,i] + omega * rnorm(N, 0, 1)
vol
vol[1,]
head(vol)
log(-1)
source('C:/Users/Frederik/Desktop/Lspeciale/Simulation.R')
warnings()
rgamma(N, 2*kappa*theta*xi^(-2), 2*kappa*xi^(-2))
source('C:/Users/Frederik/Desktop/Lspeciale/Simulation.R')
source('C:/Users/Frederik/Desktop/Lspeciale/Simulation.R')
source('C:/Users/Frederik/Desktop/Lspeciale/Simulation.R')
Y
plot(Y[1:4,])
plot(Y[1,])
Y[1,]
plot(Y[1,])
omega
sqrt(steps)
plot(vol[1,])
Sys.getenv("masters-thesis")
#######################################################################
#                                                                     #
# FROM HERE WE CHAIN EVERYTHING TOGETHER TO FORM THE SIMULATION STUDY #
#                                                                     #
#######################################################################
# working directory should be /masters-thesis
setwd(Sys.getenv("masters-thesis"))
source("simulation/heston.R")
source("bursts.R")
source("estimation/estimates.R")
source("estimation/teststat.R")
source("kernels/kernels.R")
study<-function(setting, t.index, h, q, beta, alpha){
# simulation
heston<-sim.heston(setting)
# Add Burst
Heston_vb <-   sim.addvb(Heston,    burst_time = 0.5, interval_length = 0.05, c_2 = 0.15, beta  = beta)
Heston_vbdb <- sim.adddb(Heston_vb, burst_time = 0.5,   interval_length = 0.05, c_1 = 3,    alpha = alpha)
Tstar = numeric(m)
# pathwise
m<-dim(sim$Y)[1]
for(i in 1:m){
# Extract
simpath<-sim.path(i, sim)
# Estimation of mu/sig
mu<-est.mu(simpath, h, kern.leftexp, t.index = t.index)
sig <- est.sigma(simpath, 5*h, "auto", kern.leftexp, kern.parzen, t.index = t.index)
# Calculate T
Tstat<-teststat(mu, sig, h, kern.leftexp)
# Calculate T*
Tstar[i]<-tstar(Tstat)$tstar
# plug in rest (q-quantile)
}
# return etwas
return(list())
}
setting<-sim.setup(Nsteps = 23400, Npath = 1) # use this such that we can add things to this "constructor" without changing code
# find T points
tind<-seq(from = 60, to = 23400, by = 60)
sim<-sim.heston(sim.setup(Nsteps = 23400, Npath = 1))
#######################################################################
#                                                                     #
# FROM HERE WE CHAIN EVERYTHING TOGETHER TO FORM THE SIMULATION STUDY #
#                                                                     #
#######################################################################
# working directory should be /masters-thesis
setwd(Sys.getenv("masters-thesis"))
source("simulation/heston.R")
source("bursts.R")
source("estimation/estimates.R")
source("estimation/teststat.R")
source("kernels/kernels.R")
study<-function(setting, t.index, h, q, beta, alpha){
# simulation
heston<-sim.heston(setting)
# Add Burst
Heston_vb <-   sim.addvb(Heston,    burst_time = 0.5, interval_length = 0.05, c_2 = 0.15, beta  = beta)
Heston_vbdb <- sim.adddb(Heston_vb, burst_time = 0.5,   interval_length = 0.05, c_1 = 3,    alpha = alpha)
Tstar = numeric(m)
# pathwise
m<-dim(sim$Y)[1]
for(i in 1:m){
# Extract
simpath<-sim.path(i, sim)
# Estimation of mu/sig
mu<-est.mu(simpath, h, kern.leftexp, t.index = t.index)
sig <- est.sigma(simpath, 5*h, "auto", kern.leftexp, kern.parzen, t.index = t.index)
# Calculate T
Tstat<-teststat(mu, sig, h, kern.leftexp)
# Calculate T*
Tstar[i]<-tstar(Tstat)$tstar
# plug in rest (q-quantile)
}
# return etwas
return(list())
}
setting<-sim.setup(Nsteps = 23400, Npath = 1) # use this such that we can add things to this "constructor" without changing code
# find T points
tind<-seq(from = 60, to = 23400, by = 60)
sim<-sim.heston(sim.setup(Nsteps = 23400, Npath = 1))
sim
sim$Y
sim$Y[1,]
plot(sim$Y[1,], type= "l")
mu<-est.mu(sim, 120/(3600*24*7*52))
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
warnings()
sim<-sim.heston(sim.setup(Nsteps = 23400, Npath = 1))
source("simulation/heston.R")
source("bursts.R")
source("estimation/estimates.R")
source("estimation/teststat.R")
setwd(Sys.getenv("masters-thesis"))
source("simulation/heston.R")
source("bursts.R")
source("simulation/bursts.R")
source("estimation/estimates.R")
source("estimation/teststat.R")
source("kernels/kernels.R")
sim<-sim.heston(sim.setup(Nsteps = 23400, Npath = 1))
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
source("estimation/estimates.R")
sim<-sim.heston(sim.setup(Nsteps = 23400, Npath = 1))
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
plot(mu$mu)
warnings
warnings()
340*60
source("estimation/estimates.R")
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
source("estimation/estimates.R")
sim<-sim.heston(sim.setup(Nsteps = 23400, Npath = 1))
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
source("estimation/estimates.R")
sim<-sim.heston(sim.setup(Nsteps = 23400, Npath = 1))
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
plot(mu$mu)
mu$mu
est.mu <- function(data, hd, kern, t.index=NA, t.points=NA){
# data list should include a times column and the Y column (log returns)
# t.index should be index - we use data$time[t]
# t.points might not work correctly....
# kern handling
if(is.list(kern)) kern<-kern$kern
# mode-handling
mode = NA
if(missing(t.index) & missing(t.points)){
mode = 1
t<-1:(length(data$time)) # if nothing specified - every point in data
}
else if(missing(t.index) & !missing(t.points)){
mode = 2
t<-t.points
ind = numeric(length(t))
#ind[1] = sum(data$time < t[1])
#ind[i] = data$time[ind[i-1]+sum(data$time[ind[i-1]:n] < t[i] )] #for 2 to n this may be faster than which.max
for(i in 2:length(t)){
ind[i] = which.max(data$time[data$time<t[i]])
}
}
else{
mode = 3
t<-data$time[t.index]
ind = t.index
}
#t should now be data$time points
n = length(t)
mu = numeric(n)          # We can only have bandwidth to end amount of calcs
#dy = cbind(0,t(diff(t(data$Y))))               # diff only does each column seperately / so we transpose to get row wise
dy = c(0,diff(data$Y))
# we put in a column of zeros to fit our sizes - dy[i,1] should NEVER be used!
if(mode == 1){
for(j in 2:n){
mu[j] = (1/hd)*sum(kern((data$time[1:(j-1)] - t[j])/hd)*dy[2:j])
}
}
else{
for(j in 1:n){
mu[j] = (1/hd)*sum(kern((data$time[1:(ind[j]-1)] - t[j])/hd)*dy[ 2:ind[j] ]) # mu[1] = 0...?
}
}
#for(j in 1:n){
#  mu[j] = (1/hd)*sum(kern((data$time[1:(n-1)] - t[j])/hd)*dy[2:n])
#}
# return list
return(list(time = t, mu = mu))
}
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
source("estimation/estimates.R")
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
debugSource('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
diff(sim$Y)
sim$Y
max(sim$Y)
min(sim$Y)
sims<-sim.heston(sim.setup(Nsteps = 23400, Npath = 2))
sim<-sim.path(sims, 1)
sims<-sim.heston(sim.setup(Nsteps = 23400, Npath = 2))
sim<-sim.path(1, sims)
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
source("estimation/estimates.R")
sims<-sim.heston(sim.setup(Nsteps = 23400, Npath = 2))
sim<-sim.path(1, sims)
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
diff(sim$Y)
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
plot(mu$mu)
sims$time
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp)#, t.index = tind)
plot(mu$mu)
max(mu$mu)
min(mu$mu)
mu<-est.mu(sim, 120, kern.leftexp)#, t.index = tind)
plot(mu$mu)
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
source("estimation/estimates.R")
sims<-sim.heston(sim.setup(Nsteps = 23400, Npath = 2))
sim<-sim.path(1, sims)
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
source("estimation/estimates.R")
sims<-sim.heston(sim.setup(Nsteps = 23400, Npath = 2))
sim<-sim.path(1, sims)
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
plot(mu$mu)
sim$time[60]
source("estimation/estimates.R")
sims<-sim.heston(sim.setup(Nsteps = 23400, Npath = 2))
sim<-sim.path(1, sims)
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
plot(mu$mu)
source("estimation/estimates.R")
sims<-sim.heston(sim.setup(Nsteps = 23400, Npath = 2))
sim<-sim.path(1, sims)
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
plot(mu$mu)
plot(mu$mu, type = "l")
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = NA)
plot(mu$mu, type = "l")
mu$mu
debugSource('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
debugSource('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
debugSource('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
debugSource('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
debugSource('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
debugSource('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
debugSource('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = NA)
debugSource('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = NA)
debugSource('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
debugSource('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
debugSource('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = NA)
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp)
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp)
plot(mu$mu, type = "l")
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp)#, t.index = tind)
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp)#, t.index = tind)
plot(mu$mu, type = "l")
mu$mu
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp)#, t.index = tind)
mu$mu
plot(mu$mu, type = "l")
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp)#, t.index = tind)
plot(mu$mu, type = "l")
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
plot(mu$mu, type = "l")
mu<-est.mu(sim, 120/(3600*24*7), kern.leftexp, t.index = tind)
plot(mu$mu, type = "l")
plot(sim$Y)
diff(sim$Y)
leftexpkernfunction(-5:5)
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
mu<-est.mu(sim, 2/(60*24*7*52), kern.leftexp, t.index = tind)
plot(mu$mu, type = "l")
sqrt(120/(3600*24*7'52'))
sqrt(120/(3600*24*7*52))
plot(sqrt(120/(3600*24*7*52)*mu$mu)
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
plot(sqrt(120/(3600*24*7*52))*mu$mu)
qqplot(sqrt(120/(3600*24*7*52))*mu$mu)
qqnorm(sqrt(120/(3600*24*7*52))*mu$mu)
View(est.sigma)
View(est.sigma)
sigm<-est.sigma(sim, 5*120/(3600*24*7*52), kern.leftexp, kern.parzen, t.index = tind)
sigm<-est.sigma(sim, 5*120/(3600*24*7*52), kern.leftexp, kern.parzen, t.index = tind, lag = "auto")
sigm
plot(sigm$sig)
source('C:/Users/Frederik/Dropbox/Lspeciale/masters-thesis/Estimation/estimates.R')
sigm<-est.sigma(sim, 5*120/(3600*24*7*52), kern.leftexp, kern.parzen, t.index = tind, lag = "auto")
sigm<-est.sigma(sim, 5*120/(3600*24*7*52), kern.leftexp, kern.parzen, t.index = tind, lag = "auto")
sum(sigm)
sum[sigm$sig>0]
sum(sigm$sig>0)
sigm$sig
length(sigm$sig)
length(tind)
plot(sigm$sig)
source("estimation/estimates.R")
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
plot(mu$mu, type = "l")
plot(sqrt(120/(3600*24*7*52))*mu$mu)
qqnorm(sqrt(120/(3600*24*7*52))*mu$mu)
sims<-sim.heston(sim.setup(Nsteps = 23400, Npath = 2))
sim<-sim.path(1, sims)
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
plot(mu$mu, type = "l")
plot(sqrt(120/(3600*24*7*52))*mu$mu)
qqnorm(sqrt(120/(3600*24*7*52))*mu$mu)
source("estimation/estimates.R")
sims<-sim.heston(sim.setup(Nsteps = 23400, Npath = 2))
sim<-sim.path(1, sims)
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
sigm<-est.sigma(sim, 5*120/(3600*24*7*52), kern.leftexp, kern.parzen, t.index = tind, lag = "auto")
source("estimation/estimates.R")
sims<-sim.heston(sim.setup(Nsteps = 23400, Npath = 2))
sim<-sim.path(1, sims)
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
sigm<-est.sigma(sim, 5*120/(3600*24*7*52), kern.leftexp, kern.parzen, t.index = tind, lag = "auto")
source("estimation/estimates.R")
sims<-sim.heston(sim.setup(Nsteps = 23400, Npath = 2))
sim<-sim.path(1, sims)
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
sigm<-est.sigma(sim, 5*120/(3600*24*7*52), kern.leftexp, kern.parzen, t.index = tind, lag = "auto")
plot(sigm$sig)
test<-sigm$sig
source("estimation/estimates.R")
sigm<-est.sigma(sim, 5*120/(3600*24*7*52), kern.leftexp, kern.parzen, t.index = tind, lag = "auto")
plot(sigm$sig)
plot(test)
plot(test-sigm$sig)
source("estimation/estimates.R")
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
sigm<-est.sigma(sim, 5*120/(3600*24*7*52), kern.leftexp, kern.parzen, t.index = tind, lag = "auto")
plot(test-sigm$sig)
source("estimation/estimates.R")
mu<-est.mu(sim, 120/(3600*24*7*52), kern.leftexp, t.index = tind)
sigm<-est.sigma(sim, 5*120/(3600*24*7*52), kern.leftexp, kern.parzen, t.index = tind, lag = "auto")
plot(test-sigm$sig)
plot(sigm$sig)
plot(sigm$sig)
